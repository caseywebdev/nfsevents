#!/usr/bin/env node

var chokidar = require('chokidar');
var path = require('path');
var spawn = require('child_process').spawn;
var zmq = require('zmq');

var sock;
var host = process.env.HOST;

if (host) {
  // Client mode

  sock = zmq.socket('pull');
  sock.connect('tcp://' + process.env.HOST + ':12321');

  var handleStderr = function (data) { console.error(data.toString()); };
  var isoToMtime = function (iso) {
    return iso.replace(/:(\d{2})\.\d{3}Z$/, '.$1').replace(/[-:T]/g, '');
  };

  sock.on('message', function (data) {
    data = JSON.parse(data.toString());
    console.log(data.mtime + ' ' + data.path);
    var child = spawn('touch', ['-mct', isoToMtime(data.mtime), data.path]);
    child.stderr.on('data', handleStderr);
  });
} else {
  // Host mode

  sock = zmq.socket('push');
  sock.bindSync('tcp://0.0.0.0:12321');

  var sendMessage = function (path, stat) {
    console.log(stat.mtime.toISOString() + ' ' + path);
    sock.send(JSON.stringify({path: path, mtime: stat.mtime}));
  };

  chokidar
    .watch(path.resolve(), {
      alwaysStat: true,
      ignoreInitial: true,
      persistent: true
    })
    .on('add', sendMessage)
    .on('change', sendMessage);
}
